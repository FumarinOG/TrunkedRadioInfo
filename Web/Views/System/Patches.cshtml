@using PatchService
@using SystemDetailService

@model SystemDetailViewModel

@(Html.Kendo().Grid<PatchViewModel>()
    .Name("PatchesGrid")
    .Columns(column =>
    {
        column.Bound(col => col.FromTalkgroupID)
            .Title("From TG")
            .Width(125)
            .Filterable(true);
        column.Bound(col => col.FromTalkgroupName)
            .Title("Name")
            .Filterable(filter => filter.Extra(false));
        column.Bound(col => col.ToTalkgroupID)
            .Title("To TG")
            .Width(100)
            .Filterable(true);
        column.Bound(col => col.ToTalkgroupName)
            .Title("Name")
            .Filterable(filter => filter.Extra(false));
        column.Bound(col => col.FirstSeen)
            .Format("{0:MM-dd-yyyy HH:mm}")
            .Width(150)
            .Filterable(true);
        column.Bound(col => col.LastSeen)
            .Format("{0:MM-dd-yyyy HH:mm}")
            .Width(150)
            .Filterable(true);
        column.Bound(col => col.HitCount)
            .Title("Hits")
            .Format("{0:#,##0}")
            .Width(80)
            .Filterable(false);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
                            <div class="toolbar-category">
                                <label class="category-label">Data Dates</label>
                                @(Html.Kendo().DatePicker()
                                    .Name("PatchDateFromPicker")
                                    .Format("MM-dd-yyyy")
                                    .HtmlAttributes(new { @class = "grid-datepicker" })
                                    .Events(events => events.Change("Grids.PatchDateFromChange")))
                                <span> to </span>
                                @(Html.Kendo().DatePicker()
                                    .Name("PatchDateToPicker")
                                    .Format("MM-dd-yyyy")
                                    .HtmlAttributes(new { @class = "grid-datepicker" }))
                            </div>
                            <div class="toolbar-category">
                                <a href="#" id="PatchFilterAnchor" class="k-button k-button-icontext" title="Apply filter">
                                    <span class="k-icon k-i-filter"></span>Filter
                                </a>
                            </div>
                            <div style="vertical-align: middle;">
                                <div class="toolbar-export">
                                    <a href="#" class="k-button k-button-icontext k-grid-excel" title="Export data to Excel">
                                        <span class="k-icon k-i-excel"></span>Export
                                    </a>
                                </div>
                            </div>
                        </text>);
    })
    .Filterable(filter =>
    {
        filter.Enabled(true);
        filter.Operators(operators =>
        {
            operators.ForNumber(number =>
                number.Clear()
                    .IsGreaterThanOrEqualTo(">=")
                    .IsLessThanOrEqualTo("<="));

            operators.ForString(str =>
                str.Clear()
                    .Contains("Contains"));

            operators.ForDate(date =>
                date.Clear()
                    .IsGreaterThanOrEqualTo(">=")
                    .IsLessThanOrEqualTo("<="));
        });
    })
    .Scrollable(scroll => scroll.Height(575))
    .Sortable(sort =>
        sort.SortMode(GridSortMode.SingleColumn)
            .AllowUnsort(false))
    .Pageable(pageable =>
        pageable.Input(true)
            .Refresh(true))
    .Selectable(selectable =>
        selectable.Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row))
    .Events(events =>
        events.Change("Grids.PatchChange")
            .FilterMenuInit("Filters.PatchFilterFormats"))
    .Excel(excel =>
        excel.AllPages(true)
            .Filterable(true)
            .FileName($"Patches-{Model.SystemID}.xlsx"))
    .DataSource(dataSource =>
        dataSource.Ajax()
            .PageSize(15)
            .ServerOperation(true)
            .Sort(sort => sort.Add("FromTalkgroupID").Ascending())
            .Read(read => read.Action("GetPatches", "System")
                .Data("SystemSearches.GetPatchSearchData"))))

@section scripts
{
    <script type="text/javascript">
        $("#PatchFilterAnchor").on("click",
            function() {
                $("#PatchesGrid").data("kendoGrid").dataSource.read();
            });
    </script>
}
