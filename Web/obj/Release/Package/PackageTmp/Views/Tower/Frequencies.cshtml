@using TowerFrequencyService
@using TowerService

@model TowerDetailViewModel

@(Html.Kendo().Grid<TowerFrequencyViewModel>()
    .Name("FrequenciesGrid")
    .Columns(column =>
    {
        column.Bound(col => col.Frequency)
            .Width(150)
            .Filterable(false);
        column.Bound(col => col.Usage)
            .Filterable(false);
        column.Bound(col => col.VoiceCount)
            .Title("Voice")
            .Format("{0:#,##0}")
            .Filterable(false);
        column.Bound(col => col.EncryptedCount)
            .Title("Encrypted")
            .Format("{0:#,##0}")
            .Filterable(false);
        column.Bound(col => col.DataCount)
            .Title("Data")
            .Format("{0:#,##0}")
            .Filterable(false);
        column.Bound(col => col.CWIDCount)
            .Title("CWID")
            .Format("{0:#,##0}")
            .Filterable(false);
        column.Bound(col => col.AlertCount)
            .Title("Alerts")
            .Format("{0:#,##0}")
            .Filterable(false);
        column.Bound(col => col.FirstSeen)
            .Format("{0:MM-dd-yyyy HH:mm}")
            .Width(150)
            .Filterable(true);
        column.Bound(col => col.LastSeen)
            .Format("{0:MM-dd-yyyy HH:mm}")
            .Width(150)
            .Filterable(true);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
                            <div style="vertical-align: middle;">
                                <div class="toolbar-category">
                                    @( Html.Kendo().DropDownList()
                                                    .Name("FrequencyTypeDropDownList")
                                                    .Items(dropDown =>
                                                    {
                                                        dropDown.Add().Text("Current").Value("Current");
                                                        dropDown.Add().Text("Not Current").Value("Not Current");
                                                        dropDown.Add().Text("All").Value("All");
                                                                                    })
                                                    .HtmlAttributes(new { @class = "active-dropdown" })
                                                    .Events(events => events.Change("TowerFrequencyDropDownListChange")))
                                </div>
                            </div>
                            <div class="toolbar-export">
                                <a href="#" class="k-button k-button-icontext k-grid-excel" title="Export data to Excel">
                                    <span class="k-icon k-i-excel"></span>Export
                                </a>
                            </div>
                        </text>);
            })
    .Filterable(filter =>
    {
        filter.Enabled(true);
        filter.Operators(operators =>
        {
            operators.ForNumber(number =>
                number.Clear()
                    .IsGreaterThanOrEqualTo(">=")
                    .IsLessThanOrEqualTo("<="));

            operators.ForString(str =>
                str.Clear()
                    .Contains("Contains"));

            operators.ForDate(date =>
                date.Clear()
                    .IsGreaterThanOrEqualTo(">=")
                    .IsLessThanOrEqualTo("<="));
        });
    })
    .Scrollable(scroll => scroll.Height(575))
    .Sortable(sort =>
        sort.SortMode(GridSortMode.SingleColumn)
            .AllowUnsort(false))
    .Pageable(pageable =>
        pageable.Input(true)
            .Refresh(true))
    .Selectable(selectable =>
        selectable.Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row))
    .Events(events =>
        events.Change("FrequenciesGrid.FrequencyChange")
            .FilterMenuInit("Filters.TowerFilterFormats"))
    .Excel(excel =>
        excel.AllPages(true)
            .Filterable(true)
            .FileName($"TowerFrequencies-{Model.SystemID}-{Model.TowerNumber}.xlsx"))
    .DataSource(dataSource =>
        dataSource.Ajax()
            .PageSize(15)
            .ServerOperation(true)
            .Sort(sort => sort.Add("Frequency").Ascending())
            .Read(read => read.Action("GetFrequencies", "Tower", new { systemID = Model.SystemID, towerNumber = Model.TowerNumber })
                .Data("GetFrequencySearchData"))))
